const express = require('express')
const {adminMiddleware} = require ("../middlewares/admin");
const { Admin, User } = require('../database');
const router = express.Router()
const jwt= require('jsonwebtoken');
const { JWT_SECRET } = require('../config'); 
router.post("/signup", (req, res)  =>   {
    // implement Admin Sign-Up logic
    const username = req.body.username;
    const password = req.body.password; 

    Admin.create({
        username:username,
        password: password,
    })
    .then(function() {
        res.json({
            msg: "User created successfully!!"
        })
    })
})

router.post('/signin' , async (req,res)=> {
    const username = req.body.username;
    const password = req.body.password;

    const isValidated  = await User.find    ({
        username,
        password
    })

    if(isValidated) {
        // when signin, the user has to get his token signed with  the secret key
        const token = jwt.sign({
            username, 
        }, JWT_SECRET);
        res.json({
            token: token
        })
    }    else{
        res.status(403).json({
            msg: "Wrong username or password!!"
        })
    }

})

router.post('/courses' , adminMiddleware , async(req, res) =>   {
    // implement create course logic
    // things to acquire from req must be same nas defined in schema
    const username = req.body.username; // should havendone some input validation using zod
    const description = req.body.description;
    const imageLink = req.body.imageLink;
    const price = req.body.price;
    
    // creating the course
    const newCourse = await Course.create({
        username,       // if the name of the varible and field is same then this can be done insted of username: username
        description,
        imageLink,
        price
    })
        res.json({
            msg: "Course created successfully!!",
            courseID: newCourse._id, // syntax to acquire the ID automatically generated by MONGO.DB
        })
    }) 

module.exports = router;